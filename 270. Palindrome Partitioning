class Solution {
public:
    bool isPalindrome(int left, int right, string s){
        while(left < right){
            if(s[left] != s[right])
                return false;
                
            left++;
            right--;
        }
        return true;
    }


    void backtrack(string s, int idx, int n, vector<string>& curr, vector<vector<string>>& result){
        if(idx == n){
            result.push_back(curr);
            return;
        }

        for(int i=idx; i<n; i++){
            if(isPalindrome(idx, i, s)){
                curr.push_back(s.substr(idx, i-idx+1));
                backtrack(s, i+1, n, curr, result);
                curr.pop_back();
            }
        }
    }


    vector<vector<string>> partition(string s) {
        int n = s.size();
        vector<vector<string>> result;
        vector<string> curr;

        backtrack(s, 0, n, curr, result);
        return result;
    }
};
