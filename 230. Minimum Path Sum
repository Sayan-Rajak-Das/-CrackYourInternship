class Solution {
public:
    int memo[201][201];

    int solve(vector<vector<int>>& grid, int i, int j, int m, int n){
        if(i == m-1 and j == n-1)
            return grid[i][j];

        if(memo[i][j] != -1)
            return memo[i][j];

        if(i == m-1){
            return grid[i][j] + solve(grid, i, j+1, m, n);
        }

        if(j == n-1){
            return grid[i][j] + solve(grid, i+1, j, m, n);
        }
        
        return memo[i][j] = grid[i][j] + min(solve(grid, i, j+1, m, n), solve(grid, i+1, j, m, n));
    }

    int minPathSum(vector<vector<int>>& grid) {
        memset(memo, -1, sizeof(memo));
        int m = grid.size(), n = grid[0].size();

        return solve(grid, 0, 0, m, n);
    }
};
