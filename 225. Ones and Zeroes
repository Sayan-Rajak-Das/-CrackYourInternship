class Solution {
public:
    int memo[601][101][101];

    int helper(vector<string>& strs, int m, int n, int index){
        if(index == strs.size())    
            return 0;

        if(memo[index][m][n] != -1)
            return memo[index][m][n];

        int zeros = count(strs[index].begin(), strs[index].end(), '0');
        int ones = strs[index].size() - zeros;

        int reject = helper(strs, m, n, index + 1);

        int accept = 0;
        if(zeros <= m && ones <= n){
            accept = 1 + helper(strs, m-zeros, n-ones, index+1);
        }

        return memo[index][m][n] = max(accept, reject);
    }


    int findMaxForm(vector<string>& strs, int m, int n) {
        memset(memo, -1, sizeof(memo));

        return helper(strs, m, n, 0);
    }
};
