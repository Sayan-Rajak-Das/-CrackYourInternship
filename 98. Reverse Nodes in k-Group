class Solution {
public:
    ListNode* reverseLinkedList(ListNode* head, int k) {
        ListNode* prev = nullptr;
        ListNode* curr = head;
        ListNode* next = nullptr;
        while (k > 0) {
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
            k--;
        }
        return prev;
    }
    
    ListNode* reverseKGroup(ListNode* head, int k) {
        ListNode* node = head;
        int count = 0;

        while (node != nullptr && count < k) {
            node = node->next;
            count++;
        }
        
        if (count == k) {
            ListNode* newHead = reverseLinkedList(head, k);
            head->next = reverseKGroup(node, k);
            return newHead;
        }
        
        return head;
    }
};
