// -- Question from GeeksforGeeks --

class Solution {
public:
    Node* findLCA(Node* root, int a, int b) {
        if (!root) return nullptr;
        if (root->data == a || root->data == b) return root;
        
        Node* leftLCA = findLCA(root->left, a, b);
        Node* rightLCA = findLCA(root->right, a, b);
        
        if (leftLCA && rightLCA) return root;  // If both left and right subtrees have a and b, root is LCA
        return (leftLCA != nullptr) ? leftLCA : rightLCA;
    }
    

    int findDistance(Node* root, int value, int dist) {
        if (!root) return -1;
        if (root->data == value) return dist;
        
        int leftDist = findDistance(root->left, value, dist + 1);
        if (leftDist != -1) return leftDist;
        
        return findDistance(root->right, value, dist + 1);
    }
    
    
    int findDist(Node* root, int a, int b) {
        Node* lca = findLCA(root, a, b);
        int distA = findDistance(lca, a, 0);
        int distB = findDistance(lca, b, 0);
        
        return distA + distB;
    }
};
