// -- Question from GeeksforGeeks --

class Solution
{
	public:
    //Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int V, vector<vector<int>> adj[])
    {
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        
        vector<int> key(V, INT_MAX);
        vector<bool> inMST(V, false);
        
        key[0] = 0;
        pq.push({0, 0}); // (weight, vertex)
        
        int mstWeight = 0;
        
        while (!pq.empty()) {
            int u = pq.top().second;
            int weight = pq.top().first;
            pq.pop();
            
            if (inMST[u]) continue;
            
            inMST[u] = true;
            mstWeight += weight;
            
            for (auto& edge : adj[u]) {
                int v = edge[0];
                int wt = edge[1];
                
                if (!inMST[v] && wt < key[v]) {
                    key[v] = wt;
                    pq.push({wt, v});
                }
            }
        }
        
        return mstWeight;
    }
};
