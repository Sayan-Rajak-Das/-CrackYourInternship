// -- Question from GeeksforGeeks --

class Solution {
  public:
  
    vector<vector<int>> memo;
    
    int dp(string str1, string str2, int i, int j){
        if(i < 0 || j < 0)
            return 0;
            
        if(memo[i][j] != -1)
            return memo[i][j];
            
        int result = 0;
        if(str1[i] == str2[j])
            result = 1 + dp(str1, str2, i-1, j-1);
            
        return memo[i][j] = result;
    }
    
    int longestCommonSubstr(string str1, string str2) {
        int m = str1.length(), n = str2.length();
        
        memo = vector<vector<int>>(m, vector<int>(n, -1));
        
        int maxLen = 0;
        
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                maxLen = max(maxLen, dp(str1, str2, i, j));
            }
        }
        
        return maxLen;   
    }
};

// } Driver Code Ends
