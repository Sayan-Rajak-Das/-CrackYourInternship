class Solution {
public:
    int m;
    int n;

    void dfs(vector<vector<int>>& image, int i, int j, int color, int originalColor){
        if(i<0 || i>=m || j<0 || j>= n || image[i][j] != originalColor){
            return;
        }

        image[i][j] = color;

        dfs(image, i+1, j, color, originalColor);
        dfs(image, i-1, j, color, originalColor);
        dfs(image, i, j+1, color, originalColor);
        dfs(image, i, j-1, color, originalColor);
    }

    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        m = image.size();
        n = image[0].size();

        int originalColor = image[sr][sc];

        if(originalColor != color){
            dfs(image, sr, sc, color, originalColor);
        }

        return image;
    }
};
