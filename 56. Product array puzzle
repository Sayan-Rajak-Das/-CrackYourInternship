// -- Question from GeeksforGeeks --

class Solution {
  public:
    
    vector<long long int> productExceptSelf(vector<long long int>& nums) {
        int n = nums.size();
        vector<long long int> result(n, 0);
        
        // Count the number of zeros in the array
        int zeroCount = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] == 0) {
                zeroCount++;
            }
        }

        // If more than one zero, all products except self will be zero
        if (zeroCount > 1) {
            return result;
        }


        long long int product = 1;
        for (int i = 0; i < n; i++) {
            if (nums[i] != 0) {
                product *= nums[i];
            }
        }


        for (int i = 0; i < n; i++) {
            if (nums[i] == 0) {
                result[i] = product;  // Only the index with zero gets the product of non-zero elements
            } else if (zeroCount == 0) {
                result[i] = product / nums[i];  // Normal division if there are no zeros
            }
        }

        return result;
    }
};
