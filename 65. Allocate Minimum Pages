// -- Question from GeeksforGeeks --

class Solution {
public:
    bool isPossible(int arr[], int n, int m, long long curr_min) {
        int studentsRequired = 1;
        long long curr_sum = 0;

        for (int i = 0; i < n; i++) {
            if (arr[i] > curr_min) {
                return false;
            }
            if (curr_sum + arr[i] > curr_min) {
                studentsRequired++;
                curr_sum = arr[i];
                if (studentsRequired > m) {
                    return false;
                }
            } else {
                curr_sum += arr[i];
            }
        }
        return true;
    }

    long long findPages(int n, int arr[], int m) {
        if (n < m) {
            return -1;
        }

        long long sum = 0;
        for (int i = 0; i < n; i++) {
            sum += arr[i];
        }
        long long start = 0;
        long long end = sum;
        long long result = LLONG_MAX;

        while (start <= end) {
            long long mid = (start + end) / 2;
            if (isPossible(arr, n, m, mid)) {
                result = mid;
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return result;
    }
};
