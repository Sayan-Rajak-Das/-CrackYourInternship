class Solution {
public:

    ListNode* reverseList(ListNode* head){
        ListNode* prev = nullptr;
        ListNode* curr = head;
        ListNode* next = nullptr;

        while(curr != nullptr){
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }

    ListNode* removeNthFromEnd(ListNode* head, int n) {

        head = reverseList(head);

        int count = 1;

        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode* temp = dummy;

        while(true){
            if(count == n){
                temp->next = temp->next->next;
                return reverseList(dummy->next);
            }

            count++;
            temp = temp->next;
        }
    }
};
